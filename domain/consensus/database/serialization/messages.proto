syntax = "proto3";
package serialization;

option go_package = "github.com/kaspanet/kaspad/serialization";

message DbBlock {
  DbBlockHeader header = 1;
  repeated DbTransaction transactions = 2;
}

message DbBlockHeader {
  int32 version = 1;
  repeated bytes parentHashes = 2;
  bytes hashMerkleRoot = 3;
  bytes acceptedIDMerkleRoot = 4;
  bytes utxoCommitment = 5;
  int64 timeInMilliseconds = 6;
  uint32 bits = 7;
  uint64 nonce = 8;
}

message DbTransaction {
  int32 version = 1;
  repeated DbTransactionInput inputs = 2;
  repeated DbTransactionOutput outputs = 3;
  uint64 lockTime = 4;
  bytes subnetworkID = 5;
  uint64 gas = 6;
  bytes payloadHash = 7;
  bytes payload = 8;
}

message DbTransactionInput {
  DbOutpoint previousOutpoint = 1;
  bytes signatureScript = 2;
  uint64 sequence = 3;
}

message DbOutpoint {
  bytes transactionID = 1;
  uint32 index = 2;
}

message DbTransactionOutput {
  uint64 value = 1;
  bytes scriptPublicKey = 2;
}

message DbAcceptanceData {
  repeated DbBlockAcceptanceData blockAcceptanceData = 1;
}

message DbBlockAcceptanceData {
  repeated DbTransactionAcceptanceData transactionAcceptanceData = 1;
}

message DbTransactionAcceptanceData {
  DbTransaction transaction = 1;
  uint64 fee = 2;
  bool isAccepted = 3;
}

message DbBlockRelations {
  repeated bytes parents = 1;
  repeated bytes children = 2;
}

message DbBlockStatus {
  uint32 status = 1;
}

message DbBlockGhostdagData {
  uint64 BlueScore = 1;
  bytes SelectedParent = 2;
  repeated bytes MergeSetBlues = 3;
  repeated bytes MergeSetReds = 4;
  repeated DbBluesAnticoneSizes BluesAnticoneSizes = 5;
}

message DbBluesAnticoneSizes {
  bytes blueHash = 1;
  uint32 anticoneSize = 2;
}

message DbMultiset {
  bytes multiset = 1;
}
